structure list<T>
{
    T value;
    list<T> next;


    list<T>(T value)
    {
        this.value = value;
        this.next = null;
    }

    int length()
    {
        int len = 0;
        for (list<T> cur = this; cur != null; cur = cur.next) {
            len = len + 1;
        }
        return len;
    }

    list<T> copy()
    {
        list<T> copy = list<T>(this.value);
        for (list<T> cur = this.next; cur != null; cur = cur.next) {
            copy.append(list<T>(cur.value));
        }
        return copy;
    }
    
    

    void append(list<T> other)
    {
        if (other == null) {
            return;
        }
        for (list<T> cur = other; cur != null; cur = cur.next) {
            this.append_element(cur.value);
        }
    }

    void append_element(T value)
    {
        if (this == null) {
            this.value = value;
            this.next = null;
        } else {
            this.next.append_element(value);
        }
    }

    T get(int index)
    {
        list<T> cur = this;
        for (int i = 0; i < index; i = i + 1) {
            cur = cur.next;
        }
        return cur.value;
    }

    void set(int index, T value)
    {
        list<T> cur = this;
        for (int i = 0; i < index; i = i + 1) {
            cur = cur.next;
        }
        cur.value = value;
    }



}
